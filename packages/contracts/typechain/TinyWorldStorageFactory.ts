/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorldStorage } from "./TinyWorldStorage";

export class TinyWorldStorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorldStorage> {
    return super.deploy(overrides || {}) as Promise<TinyWorldStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorldStorage {
    return super.attach(address) as TinyWorldStorage;
  }
  connect(signer: Signer): TinyWorldStorageFactory {
    return super.connect(signer) as TinyWorldStorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorldStorage {
    return new Contract(address, _abi, signerOrProvider) as TinyWorldStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perlinMax",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedCoords",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vecs",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vecsDenom",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106c0806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b03395ec11610066578063b03395ec14610122578063bf44026d1461014a578063d13e4f281461016a578063ea58cb2314610173578063fc9cbb361461018857600080fd5b80634400d97e146100a357806347b1361b146100bf5780634c6179b8146100df5780637d94792a146100f25780637dc3feb1146100fb575b600080fd5b6100ac60015481565b6040519081526020015b60405180910390f35b6013546100cc9060010b81565b60405160019190910b81526020016100b6565b6100cc6100ed36600461052d565b6101eb565b6100ac60005481565b60135461010f9062010000900461ffff1681565b60405161ffff90911681526020016100b6565b610135610130366004610515565b61022a565b604080519283526020830191909152016100b6565b61015d6101583660046104bb565b610258565b6040516100b6919061064f565b6100ac60025481565b61017b61032f565b6040516100b691906105d4565b6101dc61019636600461052d565b6014602090815260009283526040808420825291835291819020815180830190925280548252600181015492820192909252600482015460059092015490919060ff1683565b6040516100b693929190610622565b600382601081106101fb57600080fd5b01816002811061020a57600080fd5b60109182820401919006600202915091509054906101000a900460010b81565b6015818154811061023a57600080fd5b60009182526020909120600290910201805460019091015490915082565b610260610441565b81516000908152601460209081526040808320828601518452825291829020825160c081018452815460808201908152600183015460a083015281528351808501948590529093919284019160028085019182845b8154815260200190600101908083116102b557505050918352505060048201546020820152600582015460409091019060ff16600c81111561030757634e487b7160e01b600052602160045260246000fd5b600c81111561032657634e487b7160e01b600052602160045260246000fd5b90525092915050565b60155460609060009067ffffffffffffffff81111561035e57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561039757816020015b610384610441565b81526020019060019003908161037c5790505b50905060005b60155481101561043b576103fd601582815481106103cb57634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050610258565b82828151811061041d57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061043390610663565b91505061039d565b50919050565b6040805160c0810190915260006080820181815260a083019190915281526020810161046b61049d565b8152602001600081526020016000600c81111561049857634e487b7160e01b600052602160045260246000fd5b905290565b60405180604001604052806002906020820280368337509192915050565b6000604082840312156104cc578081fd5b6040516040810181811067ffffffffffffffff821117156104fb57634e487b7160e01b83526041600452602483fd5b604052823581526020928301359281019290925250919050565b600060208284031215610526578081fd5b5035919050565b6000806040838503121561053f578081fd5b50508035926020909101359150565b600d811061056c57634e487b7160e01b600052602160045260246000fd5b9052565b61058582825180518252602090810151910152565b6020808201516040840160005b60028110156105af57825182529183019190830190600101610592565b505050506040810151608083015260608101516105cf60a084018261054e565b505050565b6020808252825182820181905260009190848201906040850190845b8181101561061657610603838551610570565b9284019260c092909201916001016105f0565b50909695505050505050565b835181526020808501519082015260808101836040830152610647606083018461054e565b949350505050565b60c0810161065d8284610570565b92915050565b600060001982141561068357634e487b7160e01b81526011600452602481fd5b506001019056fea2646970667358221220868977590c48073110a41d4ab607bc27f79789e78392725d87955e4eb2f6d79d64736f6c63430008040033";
