/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorldStorage } from "./TinyWorldStorage";

export class TinyWorldStorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorldStorage> {
    return super.deploy(overrides || {}) as Promise<TinyWorldStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorldStorage {
    return super.attach(address) as TinyWorldStorage;
  }
  connect(signer: Signer): TinyWorldStorageFactory {
    return super.connect(signer) as TinyWorldStorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorldStorage {
    return new Contract(address, _abi, signerOrProvider) as TinyWorldStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "perlin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "perlin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "perlin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perlinMax",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedCoords",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vecs",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vecsDenom",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610666806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b03395ec11610066578063b03395ec14610122578063bf44026d1461014a578063d13e4f281461016a578063ea58cb2314610173578063fc9cbb361461018857600080fd5b80634400d97e146100a357806347b1361b146100bf5780634c6179b8146100df5780637d94792a146100f25780637dc3feb1146100fb575b600080fd5b6100ac60015481565b6040519081526020015b60405180910390f35b6013546100cc9060010b81565b60405160019190910b81526020016100b6565b6100cc6100ed3660046104f0565b6101f2565b6100ac60005481565b60135461010f9062010000900461ffff1681565b60405161ffff90911681526020016100b6565b6101356101303660046104d8565b610231565b604080519283526020830191909152016100b6565b61015d61015836600461047e565b61025f565b6040516100b691906105f5565b6100ac60025481565b61017b61033f565b6040516100b69190610573565b6101e26101963660046104f0565b6014602090815260009283526040808420825291835291819020815180830190925280548252600181015492820192909252600282015460038301546004909301549192909160ff1684565b6040516100b694939291906105c1565b6003826010811061020257600080fd5b01816002811061021157600080fd5b60109182820401919006600202915091509054906101000a900460010b81565b6015818154811061024157600080fd5b60009182526020909120600290910201805460019091015490915082565b6102946040805160c08101825260006080820181815260a0830182905282526020820181905291810182905290606082015290565b81516000908152601460209081526040808320828601518452825291829020825160c081018452815460808201908152600183015460a083015281526002820154928101929092526003810154928201929092526004820154909190606083019060ff16600b81111561031757634e487b7160e01b600052602160045260246000fd5b600b81111561033657634e487b7160e01b600052602160045260246000fd5b90525092915050565b60155460609060009067ffffffffffffffff81111561036e57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156103d457816020015b6103c16040805160c08101825260006080820181815260a0830182905282526020820181905291810182905290606082015290565b81526020019060019003908161038c5790505b50905060005b6015548110156104785761043a6015828154811061040857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505061025f565b82828151811061045a57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061047090610609565b9150506103da565b50919050565b60006040828403121561048f578081fd5b6040516040810181811067ffffffffffffffff821117156104be57634e487b7160e01b83526041600452602483fd5b604052823581526020928301359281019290925250919050565b6000602082840312156104e9578081fd5b5035919050565b60008060408385031215610502578081fd5b50508035926020909101359150565b600c811061052f57634e487b7160e01b600052602160045260246000fd5b9052565b61054882825180518252602090810151910152565b6020810151604083015260408101516060830152606081015161056e6080840182610511565b505050565b6020808252825182820181905260009190848201906040850190845b818110156105b5576105a2838551610533565b9284019260a0929092019160010161058f565b50909695505050505050565b845181526020808601519082015260a081018460408301528360608301526105ec6080830184610511565b95945050505050565b60a081016106038284610533565b92915050565b600060001982141561062957634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212206443095af8c499ce14c5a63cfb8436193f361c2d5a58f6fc006a7b56c9d632ce64736f6c63430008040033";
