/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(
    linkLibraryAddresses: TinyWorldLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, TinyWorldFactory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: TinyWorldLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$25da62efdcc799b068a78b56dfb6cf3909\\$__", "g"),
      linkLibraryAddresses["__$25da62efdcc799b068a78b56dfb6cf3909$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "perlin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "enum TileType",
        name: "localTileType",
        type: "uint8",
      },
    ],
    name: "confirmTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "perlin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "perlin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "perlin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perlinMax",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedCoords",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vecs",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vecsDenom",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eed806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063d13e4f2811610066578063d13e4f281461022a578063ea58cb2314610233578063f2fde38b14610248578063fc9cbb361461025b57600080fd5b80638da5cb5b146101b45780638e687023146101cf578063b03395ec146101ef578063bf44026d1461021757600080fd5b8063715018a6116100d3578063715018a6146101695780637d94792a146101715780637dc3feb11461017a57806380d85911146101a157600080fd5b80633e553d1b146101055780634400d97e1461011a57806347b1361b146101365780634c6179b814610156575b600080fd5b610118610113366004610c7f565b6102c5565b005b61012360665481565b6040519081526020015b60405180910390f35b6078546101439060010b81565b60405160019190910b815260200161012d565b610143610164366004610ce9565b610362565b6101186103a1565b61012360655481565b60785461018e9062010000900461ffff1681565b60405161ffff909116815260200161012d565b6101186101af366004610d0a565b610407565b6033546040516001600160a01b03909116815260200161012d565b6101e26101dd366004610c64565b61048d565b60405161012d9190610e62565b6102026101fd366004610cb9565b610678565b6040805192835260208301919091520161012d565b6101e2610225366004610c64565b6106a6565b61012360675481565b61023b6106ae565b60405161012d9190610d92565b610118610256366004610c36565b6107c0565b6102b5610269366004610ce9565b6079602090815260009283526040808420825291835291819020815180830190925280548252600181015492820192909252600282015460038301546004909301549192909160ff1684565b60405161012d9493929190610e2e565b60006102d08361048d565b905081600b8111156102f257634e487b7160e01b600052602160045260246000fd5b8160600151600b81111561031657634e487b7160e01b600052602160045260246000fd5b1461035d5760405162461bcd60e51b81526020600482015260126024820152710a8d2d8ca40e8f2e0ca40dad2e6dac2e8c6d60731b60448201526064015b60405180910390fd5b505050565b6068826010811061037257600080fd5b01816002811061038157600080fd5b60109182820401919006600202915091509054906101000a900460010b81565b6033546001600160a01b031633146103fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610354565b610405600061088b565b565b600054610100900460ff1680610420575060005460ff16155b61043c5760405162461bcd60e51b815260040161035490610de0565b600054610100900460ff1615801561045e576000805461ffff19166101011790555b6104666108dd565b6065849055606683905560678290558015610487576000805461ff00191690555b50505050565b610495610baa565b8151600090815260796020908152604080832082860151845290915281206004015460ff16600b8111156104d957634e487b7160e01b600052602160045260246000fd5b14156105cd576104e882610958565b8251600090815260796020908152604080832082870151845282529182902083518051825582015160018083019190915591840151600282015591830151600383015560608301516004830180549192909160ff19169083600b81111561055f57634e487b7160e01b600052602160045260246000fd5b021790555050607a805460018101825560009190915283517ff0440771a29e57e18c66727944770b82cc77924aef333c927ce6bdd2cdb3ae0360029092029182015560208401517ff0440771a29e57e18c66727944770b82cc77924aef333c927ce6bdd2cdb3ae0490910155505b81516000908152607960209081526040808320828601518452825291829020825160c081018452815460808201908152600183015460a083015281526002820154928101929092526003810154928201929092526004820154909190606083019060ff16600b81111561065057634e487b7160e01b600052602160045260246000fd5b600b81111561066f57634e487b7160e01b600052602160045260246000fd5b90525092915050565b607a818154811061068857600080fd5b60009182526020909120600290910201805460019091015490915082565b6105cd610baa565b607a5460609060009067ffffffffffffffff8111156106dd57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561071657816020015b610703610baa565b8152602001906001900390816106fb5790505b50905060005b607a548110156107ba5761077c607a828154811061074a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250506106a6565b82828151811061079c57634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806107b290610e70565b91505061071c565b50919050565b6033546001600160a01b0316331461081a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610354565b6001600160a01b03811661087f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610354565b6108888161088b565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16806108f6575060005460ff16155b6109125760405162461bcd60e51b815260040161035490610de0565b600054610100900460ff16158015610934576000805461ffff19166101011790555b61093c610a76565b610944610ae0565b8015610888576000805461ff001916905550565b610960610baa565b81516020830151606554606754604051630453a0b160e31b815263ffffffff94851660048201529284166024840152908316604483015291909116606482015260009073__$25da62efdcc799b068a78b56dfb6cf3909$__9063229d05889060840160206040518083038186803b1580156109da57600080fd5b505af41580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a129190610cd1565b90506000610a1f84610b40565b90506000610a2c83610b91565b9050604051806080016040528086815260200184815260200183815260200182600b811115610a6b57634e487b7160e01b600052602160045260246000fd5b905295945050505050565b600054610100900460ff1680610a8f575060005460ff16155b610aab5760405162461bcd60e51b815260040161035490610de0565b600054610100900460ff16158015610944576000805461ffff19166101011790558015610888576000805461ff001916905550565b600054610100900460ff1680610af9575060005460ff16155b610b155760405162461bcd60e51b815260040161035490610de0565b600054610100900460ff16158015610b37576000805461ffff19166101011790555b6109443361088b565b6000600882600001518360200151604051602001610b68929190918252602082015260400190565b6040516020818303038152906040528051906020012060001c610b8b9190610e97565b92915050565b6000601e8211610ba2576008610b8b565b600192915050565b6040805160c08101825260006080820181815260a0830182905282526020820181905291810182905290606082015290565b600060408284031215610bed578081fd5b6040516040810181811067ffffffffffffffff82111715610c1c57634e487b7160e01b83526041600452602483fd5b604052823581526020928301359281019290925250919050565b600060208284031215610c47578081fd5b81356001600160a01b0381168114610c5d578182fd5b9392505050565b600060408284031215610c75578081fd5b610c5d8383610bdc565b60008060608385031215610c91578081fd5b610c9b8484610bdc565b91506040830135600c8110610cae578182fd5b809150509250929050565b600060208284031215610cca578081fd5b5035919050565b600060208284031215610ce2578081fd5b5051919050565b60008060408385031215610cfb578182fd5b50508035926020909101359150565b600080600060608486031215610d1e578081fd5b505081359360208301359350604090920135919050565b600c8110610d5357634e487b7160e01b600052602160045260246000fd5b9052565b610d6c82825180518252602090810151910152565b6020810151604083015260408101516060830152606081015161035d6080840182610d35565b6020808252825182820181905260009190848201906040850190845b81811015610dd457610dc1838551610d57565b9284019260a09290920191600101610dae565b50909695505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b845181526020808601519082015260a08101846040830152836060830152610e596080830184610d35565b95945050505050565b60a08101610b8b8284610d57565b6000600019821415610e9057634e487b7160e01b81526011600452602481fd5b5060010190565b600082610eb257634e487b7160e01b81526012600452602481fd5b50069056fea2646970667358221220679a7350ce1d9f32832d417d6a89d40420f890dbd39afd80459bcff7cce1007264736f6c63430008040033";

export interface TinyWorldLibraryAddresses {
  ["__$25da62efdcc799b068a78b56dfb6cf3909$__"]: string;
}
